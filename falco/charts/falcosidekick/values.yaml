# Default values for falcosidekick.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- number of running pods
replicaCount: 1

# -- number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
# revisionHistoryLimit: 1

image:
  # -- The image registry to pull from
  registry: docker.io
  # -- The image repository to pull from
  repository: falcosecurity/falcosidekick
  # -- The image tag to pull
  tag: 2.28.0
  # -- The image pull policy
  pullPolicy: IfNotPresent

# -- Sidekick pod securityContext
podSecurityContext:
  runAsUser: 1234
  fsGroup: 1234

# -- Sidekick container securityContext
securityContext: {}

# One or more secrets to be used when pulling images
# -- Secrets for the registry
imagePullSecrets: []
# - registrySecretName

# -- Override name
nameOverride: ""
# -- Override the name
fullnameOverride: ""

# -- podSecurityPolicy
podSecurityPolicy:
  # -- Whether to create a podSecurityPolicy
  create: false

# -- Name of the priority class to be used by the Sidekickpods, priority class needs to be created beforehand
priorityClassName: ""

# -- additions labels on the pods
podLabels: {}
# -- additions annotations on the pods
podAnnotations: {}

serviceMonitor:
  # -- enable the deployment of a Service Monitor for the Prometheus Operator.
  enabled: false
  # -- specify Additional labels to be added on the Service Monitor.
  additionalLabels: {}
  # -- specify a user defined interval. When not specified Prometheus default interval is used.
  interval: ""
  # -- specify a user defined scrape timeout. When not specified Prometheus default scrape timeout is used.
  scrapeTimeout: ""

prometheusRules:
  # -- enable the creation of PrometheusRules for alerting
  enabled: false
  alerts:
    warning:
      # -- enable the high rate rule for the warning events
      enabled: true
      # -- rate interval for the high rate rule for the warning events
      rate_interval: "5m"
      # -- threshold for the high rate rule for the warning events
      threshold: 0
    error:
      # -- enable the high rate rule for the error events
      enabled: true
      # -- rate interval for the high rate rule for the error events
      rate_interval: "5m"
      # -- threshold for the high rate rule for the error events
      threshold: 0
    critical:
      # -- enable the high rate rule for the critical events
      enabled: true
      # -- rate interval for the high rate rule for the critical events
      rate_interval: "5m"
      # -- threshold for the high rate rule for the critical events
      threshold: 0
    alert:
      # -- enable the high rate rule for the alert events
      enabled: true
      # -- rate interval for the high rate rule for the alert events
      rate_interval: "5m"
      # -- threshold for the high rate rule for the alert events
      threshold: 0
    emergency:
      # -- enable the high rate rule for the emergency events
      enabled: true
      # -- rate interval for the high rate rule for the emergency events
      rate_interval: "5m"
      # -- threshold for the high rate rule for the emergency events
      threshold: 0
    output:
      # -- enable the high rate rule for the errors with the outputs
      enabled: true
      # -- rate interval for the high rate rule for the errors with the outputs
      rate_interval: "5m"
      # -- threshold for the high rate rule for the errors with the outputs
      threshold: 0
    additionalAlerts: {}

config:
  # -- Existing secret with configuration
  existingSecret: ""
  # -- Extra environment variables
  extraEnv: []
  # -- Extra command-line arguments
  extraArgs: []
  # -- DEBUG environment variable
  debug: false
  # -- a list of escaped comma separated custom fields to add to falco events, syntax is "key:value\,key:value"
  customfields: ""
  # -- a list of escaped comma separated Go templated fields to add to falco events, syntax is "key:template\,key:template"
  templatedfields: ""
  # -- if not empty, the brackets in keys of Output Fields are replaced
  bracketreplacer: ""
  # -- folder which will used to store client.crt, client.key and ca.crt files for mutual tls for outputs, will be deprecated in the future (default: "/etc/certs")
  mutualtlsfilespath: "/etc/certs"

  mutualtlsclient:
    # -- client certification file for mutual TLS client certification, takes priority over mutualtlsfilespath if not empty
    certfile: ""
    # -- client key file for mutual TLS client certification, takes priority over mutualtlsfilespath if not empty
    keyfile: ""
    # -- CA certification file for server certification for mutual TLS authentication, takes priority over mutualtlsfilespath if not empty
    cacertfile: ""

  tlsserver:
    # -- if true TLS server will be deployed instead of HTTP
    deploy: false
    # -- existing secret with server.crt, server.key and ca.crt files for TLS Server
    existingSecret: ""
    # -- server.crt file for TLS Server
    servercrt: ""
    # -- server certification file path for TLS Server
    certfile: "/etc/certs/server/server.crt"
    # -- server.key file for TLS Server
    serverkey: ""
    # -- server key file path for TLS Server
    keyfile: "/etc/certs/server/server.key"
    # -- if true mutual TLS server will be deployed instead of TLS, deploy also has to be true
    mutualtls: false
    # ca.crt file for client certification if mutualtls is true
    cacrt: ""
    # --  CA certification file path for client certification if mutualtls is true
    cacertfile: "/etc/certs/server/ca.crt"
    # -- port to serve http server serving selected endpoints
    notlsport: 2810
    # -- a comma separated list of endpoints, if not empty, and tlsserver.deploy is true, a separate http server will be deployed for the specified endpoints (/ping endpoint needs to be notls for Kubernetes to be able to perform the healthchecks)
    notlspaths: "/ping"
  
  webhook:
    # -- Webhook address, if not empty, Webhook output is *enabled*
    address: "http://argo-workflows-server.argo-workflows.svc.cluster.local:2746/api/v1/webhooks/falco"
    # -- HTTP method: POST or PUT
    method: "POST"
    # -- a list of comma separated custom headers to add, syntax is "key:value\,key:value"
    customHeaders: "Content-Type: application/json"
    # -- minimum priority of event to use this output, order is `emergency\|alert\|critical\|error\|warning\|notice\|informational\|debug or ""`
    minimumpriority: ""
    # -- if true, checkcert flag will be ignored (server cert will always be checked)
    mutualtls: false
    # -- check if ssl certificate of the output is valid
    checkcert: true

  syslog:
    # -- Syslog Host, if not empty, Syslog output is *enabled*
    host: ""
    # -- Syslog endpoint port number
    port: ""
    # -- Syslog transport protocol. It can be either "tcp" or "udp"
    protocol: "tcp"
    # -- Syslog payload format. It can be either "json" or "cef"
    format: "json"
    # -- minimum priority of event to use this output, order is `emergency\|alert\|critical\|error\|warning\|notice\|informational\|debug or ""`
    minimumpriority: ""

service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 2801
  # -- Service annotations
  annotations: {}
    # networking.gke.io/load-balancer-type: Internal

ingress:
  # -- Whether to create the ingress
  enabled: false
  # -- Ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress hosts
  hosts:
    - host: falcosidekick.local
      paths:
        - path: /
          # -- pathType (e.g. ImplementationSpecific, Prefix, .. etc.)
          # pathType: Prefix
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- The resources for falcosdekick pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Sidekick nodeSelector field
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Affinity for the Sidekick pods
affinity: {}

# -- Extra volumes for sidekick deployment
extraVolumes: []
# - name: optional-mtls-volume
#   configMap:
#     name: falco-certs-optional
#     optional: true
#     items:
#       - key: mtlscert.optional.tls
#         path: mtlscert.optional.tls

# -- Extra volume mounts for sidekick deployment
extraVolumeMounts: []
# - mountPath: /etc/certs/mtlscert.optional.tls
#   name: optional-mtls-volume

testConnection:
  # -- test connection nodeSelector field
  nodeSelector: {}

  # -- Tolerations for pod assignment
  tolerations: []

  # -- Affinity for the test connection pod
  affinity: {}

webui:
  # -- enable Falcosidekick-UI
  enabled: false
  # -- number of running pods
  replicaCount: 1
  # -- number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
  # revisionHistoryLimit: 1
  # -- Log level ("debug", "info", "warning", "error")
  loglevel: "info"
  # -- TTL for keys, the syntax in X<unit>, with <unit>: s, m, d, w (0 for no ttl)
  ttl: 0
  # -- User in format <login>:<password>
  user: "admin:admin"
  # -- Disable the basic auth
  disableauth: false
  # -- Existing secret with configuration
  existingSecret: ""
  # -- Allow CORS
  allowcors: false
  image:
    # -- The web UI image registry to pull from
    registry: docker.io
    # -- The web UI image repository to pull from
    repository: falcosecurity/falcosidekick-ui
    # -- The web UI image tag to pull
    tag: "2.2.0"
    # -- The web UI image pull policy
    pullPolicy: IfNotPresent

  # -- Web UI pod securityContext
  podSecurityContext:
    runAsUser: 1234
    fsGroup: 1234

  # -- Web UI container securityContext
  securityContext: {}

  # -- Name of the priority class to be used by the Web UI pods, priority class needs to be created beforehand
  priorityClassName: ""

  # -- additions labels on the pods web UI
  podLabels: {}
  # -- additions annotations on the pods web UI
  podAnnotations: {}

  service:
    # -- The web UI service type
    type: ClusterIP
    # -- The web UI service port dor the falcosidekick-ui
    port: 2802
    # -- The web UI service nodePort
    nodePort: 30282
    # -- The web UI service targetPort
    targetPort: 2802
    # -- The web UI service annotations (use this to set a internal LB, for example.)
    annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true"

  ingress:
    # -- Whether to create the Web UI ingress
    enabled: false
    # --  Web UI ingress annotations
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # --  Web UI ingress hosts configuration
    hosts:
      - host: falcosidekick-ui.local
        paths:
        - path: /
    # --  Web UI ingress TLS configuration
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  # --  The resources for the web UI pods
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  # -- Web UI nodeSelector field
  nodeSelector: {}
  # -- Tolerations for pod assignment
  tolerations: []
  # -- Affinity for the Web UI pods
  affinity: {}
  externalRedis:
    # -- Enable or disable the usage of an external Redis. Is mutually exclusive with webui.redis.enabled.
    enabled: false
    # -- The URL of the external Redis database with RediSearch > v2
    url: ""
    # --  The port of the external Redis database with RediSearch > v2
    port: 6379
  redis:
    # -- Is mutually exclusive with webui.externalRedis.enabled
    enabled: true
    image:
      # -- The web UI Redis image registry to pull from
      registry: docker.io
      # -- The web UI Redis image repository to pull from
      repository: redis/redis-stack
      # -- The web UI Redis image tag to pull from
      tag: "6.2.6-v3"
      # -- The web UI image pull policy
      pullPolicy: IfNotPresent

    # -- Existing secret with configuration
    existingSecret: ""

    # -- Set a password for Redis
    password: ""

    # -- Name of the priority class to be used by the Web UI Redis pods, priority class needs to be created beforehand
    priorityClassName: ""

    # -- additions labels on the pods
    podLabels: {}
    # -- additions annotations on the pods
    podAnnotations: {}

    # -- Enable the PVC for the redis pod
    storageEnabled: true
    # -- Size of the PVC for the redis pod
    storageSize: "1Gi"
    # -- Storage class of the PVC for the redis pod
    storageClass: ""

    service:
      # -- The web UI Redis service type (i. e: LoadBalancer)
      type: ClusterIP
      # -- The web UI Redis service port dor the falcosidekick-ui
      port: 6379
      # -- The web UI Redis service targetPort
      targetPort: 6379
      # -- The web UI Redis service annotations (use this to set a internal LB, for example.)
      annotations: {}

    # -- Web UI Redis pod securityContext
    podSecurityContext: {}

    # -- Web UI Redis container securityContext
    securityContext: {}

    # -- The resources for the redis pod
    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    # -- Web UI Redis nodeSelector field
    nodeSelector: {}

    # -- Tolerations for pod assignment
    tolerations: []

    # -- Affinity for the Web UI Redis pods
    affinity: {}
